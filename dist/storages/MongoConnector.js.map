{"version":3,"file":"MongoConnector.js","sourceRoot":"","sources":["../../storages/MongoConnector.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,yDAAwD;AAIxD;IAAoC,kCAAiB;IAIjD,wBAAY,UAAsB;QAAlC,YACI,iBAAO,SAEV;QADG,KAAI,CAAC,UAAU,GAAG,UAAU,CAAA;;IAChC,CAAC;IAEY,qCAAY,GAAzB,UAA0B,KAAa;;;;;4BACf,qBAAM,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,EAAC,KAAK,OAAA,EAAC,CAAC,EAAA;;wBAApD,WAAW,GAAG,SAA+C;wBAEnE,IAAI,WAAW,KAAK,IAAI,EAAE;4BACtB,WAAW,CAAC,iBAAiB,GAAG,IAAI,CAAA;yBACvC;wBAED,sBAAO,WAAW,EAAA;;;;KACrB;IAEY,qCAAY,GAAzB,UAA0B,KAAY;;;;4BAClC,qBAAM,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,EAAC,KAAK,EAAG,KAAK,CAAC,KAAK,EAAC,EAAE,EAAC,IAAI,EAAG,KAAK,EAAC,EAAG,EAAC,MAAM,EAAG,IAAI,EAAC,CAAC,EAAA;;wBAAxF,SAAwF,CAAA;wBACxF,sBAAO,KAAK,EAAA;;;;KACf;IACL,qBAAC;AAAD,CAAC,AAvBD,CAAoC,qCAAiB,GAuBpD;AAvBY,wCAAc","sourcesContent":["import { AbstractConnector } from './AbstractConnector';\nimport { Collection } from 'mongodb';\nimport { Email } from '../models/data/Email';\n\nexport class MongoConnector extends AbstractConnector {\n\n    private collection: Collection\n\n    constructor(collection: Collection) {\n        super()\n        this.collection = collection\n    }\n\n    public async getEmailInfo(email: string): Promise<Email |Â null> {\n        const emailFromDb = await this.collection.findOne({email}) as Email\n\n        if (emailFromDb !== null) {\n            emailFromDb.alreadyInDatabase = true\n        }\n\n        return emailFromDb\n    }\n\n    public async addEmailInfo(email: Email): Promise<Email> {\n        await this.collection.updateOne({email : email.email}, {$set : email} , {upsert : true})\n        return email\n    }\n}\n"]}