{"version":3,"file":"RedisConnector.js","sourceRoot":"","sources":["../../storages/RedisConnector.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,yDAAwD;AAIxD;IAAoC,kCAAiB;IAGjD,wBAAY,WAA8B;QAA1C,YACI,iBAAO,SAEV;QADG,KAAI,CAAC,WAAW,GAAG,WAAW,CAAA;;IAClC,CAAC;IAEY,qCAAY,GAAzB,UAA0B,KAAY;;;;;4BACd,qBAAM,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC,EAAA;;wBAA7D,GAAG,GAAW,SAA+C;6BAC/D,CAAA,GAAG,KAAK,CAAC,CAAA,EAAT,wBAAS;wBACT,qBAAM,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,EAAA;;wBAAnE,SAAmE,CAAA;;4BAEvE,sBAAO,KAAK,EAAA;;;;KACf;IAEY,qCAAY,GAAzB,UAA0B,KAAa;;;;;4BACV,qBAAM,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,KAAK,CAAC,EAAA;;wBAA1D,MAAM,GAAa,SAAuC;wBAEhE,IAAI,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE;4BAC/B,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAU,CAAA;4BAC3C,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAA;4BAC7B,sBAAO,IAAI,EAAA;yBACd;wBACD,sBAAO,IAAI,EAAA;;;;KACd;IACL,qBAAC;AAAD,CAAC,AA1BD,CAAoC,qCAAiB,GA0BpD;AA1BY,wCAAc","sourcesContent":["import { AbstractConnector } from './AbstractConnector';\nimport { Email } from '../models/data/Email';\nimport * as redis from 'redis'\n\nexport class RedisConnector extends AbstractConnector {\n    private redisClient: any\n\n    constructor(redisClient: redis.RedisClient) {\n        super()\n        this.redisClient = redisClient\n    }\n\n    public async addEmailInfo(email: Email): Promise<Email> {\n        const num: number = await this.redisClient.existsAsync(email.email)\n        if (num === 0) {\n            await this.redisClient.setAsync(email.email, JSON.stringify(email))\n        }\n        return email\n    }\n\n    public async getEmailInfo(email: string): Promise<Email | null> {\n        const emails: string[] = await this.redisClient.mgetAsync(email)\n\n        if (emails.length && emails[0] !== null) {\n            const mail = JSON.parse(emails[0]) as Email\n            mail.alreadyInDatabase = true\n            return mail\n        }\n        return null\n    }\n}\n"]}